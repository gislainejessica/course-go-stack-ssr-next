{"ast":null,"code":"var _jsxFileName = \"/home/gislaine/course-go-stack-ssr-next/pages/users.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport withAnalytics from '../src/hocs/withAnalytics';\n\nconst User = ({\n  users\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" Usu\\xE1rios \")), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Users\"), __jsx(\"img\", {\n    src: \"/static/robo3t.png\",\n    width: \"100\",\n    alt: \"robot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, users.map(user => __jsx(\"li\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" \", user.login, \" \"))), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" Voltar \")));\n};\n/** Propriedade estática das paginas pra fazer uma requisição que vai retornar\n um objeto para o componente, para que o componente seja executada no Backend */\n\n\nUser.getInitialProps = async () => {\n  const response = await axios.get('https://api.github.com/orgs/rocketseat/members');\n  return {\n    users: response.data\n  };\n};\n\nexport default withAnalytics()(User);","map":{"version":3,"sources":["/home/gislaine/course-go-stack-ssr-next/pages/users.js"],"names":["React","axios","Link","Head","withAnalytics","User","users","map","user","id","login","getInitialProps","response","get","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAGA,MAAOC,IAAI,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAiB;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,KAAK,EAAC,KAApC;AAA0C,IAAA,GAAG,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACd;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBD,IAAI,CAACE,KAAzB,MADA,CADJ,CAPF,EAaE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAbF,CADF;AAmBD,CApBD;AAsBA;;;;AAEAL,IAAI,CAACM,eAAL,GAAuB,YAAY;AACjC,QAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CACrB,gDADqB,CAAvB;AAGA,SAAO;AAAEP,IAAAA,KAAK,EAAGM,QAAQ,CAACE;AAAnB,GAAP;AACD,CALD;;AAOA,eAAeV,aAAa,GAAGC,IAAH,CAA5B","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport Link from 'next/link'\nimport Head from 'next/head'\nimport withAnalytics from '../src/hocs/withAnalytics'\n\n\nconst  User = ( { users } ) => {\n  return (\n    <div>\n      <Head>\n        <title> Usuários </title>\n      </Head>\n      <h1>Users</h1>\n      <img src=\"/static/robo3t.png\" width=\"100\" alt=\"robot\"/>\n\n      <ul>\n        { users.map(user => (\n          <li key={user.id}> {user.login} </li>\n          ))\n        }\n      </ul>\n      <Link href=\"/\">\n        <a> Voltar </a>\n      </Link>\n    </div>\n  )\n}\n\n/** Propriedade estática das paginas pra fazer uma requisição que vai retornar\n um objeto para o componente, para que o componente seja executada no Backend */\nUser.getInitialProps = async () => {\n  const response = await axios.get(\n    'https://api.github.com/orgs/rocketseat/members'\n  )\n  return { users : response.data }\n}\n\nexport default withAnalytics()(User)"]},"metadata":{},"sourceType":"module"}